{"version":3,"sources":["webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/login/login.component.scss","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/signup/signup.component.scss","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.component.scss","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"<div class=\\\"view\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-md-center\\\">\\n      <div class=\\\"col-6\\\">\\n        <ul class=\\\"nav nav-tabs\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" [class.active]=\\\"isStandLogin()\\\" (click)=\\\"setActiveTab('STANDARD')\\\">Standard</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" *ngIf=\\\"authenticationProviders && authenticationProviders.includes('LDAP')\\\" [class.active]=\\\"isLdapLogin()\\\" (click)=\\\"setActiveTab('LDAP')\\\">LDAP</a>\\n          </li>\\n        </ul>\\n        <header>\\n          <h3> {{ authName |  titlecase }} Login</h3>\\n        </header>\\n        <br />\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"submit(loginForm)\\\" class=\\\"login-form\\\" novalidate>\\n          <div class=\\\"login\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-2\\\">\\n                Username:\\n              </div>\\n              <div class=\\\"col-md-10\\\">\\n                <input type=\\\"username\\\" name=\\\"username\\\" id=\\\"username\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" />\\n                <div class=\\\"alert alert-danger\\\" [hidden]=\\\"loginForm.controls.username.untouched || loginForm.controls.username.valid\\\">\\n                  A valid username address is required\\n                </div>\\n              </div>\\n            </div>\\n            <br />\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-2\\\">\\n                Password:\\n              </div>\\n              <div class=\\\"col-md-10\\\">\\n                <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" />\\n                <div class=\\\"alert alert-danger\\\" [hidden]=\\\"loginForm.controls.password.untouched || loginForm.controls.password.valid\\\">\\n                  Password is required (6 or more characters with at least one number)\\n                </div>\\n              </div>\\n            </div>\\n            <br />\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n              </div>\\n            </div>\\n            <br />\\n            <div class=\\\"statusRow\\\">\\n              <br />\\n              <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">{{ errorMessage }}</div>\\n            </div>\\n            <div class=\\\"gap text-center\\\" [hidden]=\\\"!isStandLogin()\\\">\\n              <p>Don't have an account?</p>\\n              <div class=\\\"btn btn-link btn-wide\\\"\\n                   (click)=\\\"signUp()\\\" >\\n                <span class=\\\"fa fa-lg fa-key\\\"></span>\\n                Sign up\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"view\\\">\\n  <div class=\\\"container\\\">\\n    <header>\\n      <h3>  Please Sign Up</h3>\\n    </header>\\n    <br />\\n    <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"submit(signupForm)\\\" class=\\\"login-form\\\" novalidate>\\n      <div class=\\\"login\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\">\\n            username:\\n          </div>\\n          <div class=\\\"col-md-10\\\">\\n            <input type=\\\"username\\\" id=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\"\\n                   [ngClass]=\\\"{'is-invalid': (signupForm.get('username').touched ||\\n                                            signupForm.get('username').dirty) &&\\n                                            !signupForm.get('username').valid }\\\" />\\n            <span class=\\\"invalid-feedback\\\">\\n              <span *ngIf=\\\"signupForm.get('username').errors?.required\\\">\\n                A valid username address is required\\n              </span>\\n            </span>\\n          </div>\\n        </div>\\n        <br />\\n        <div formGroupName=\\\"passwordGroup\\\">\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-md-2\\\">\\n              Password:\\n            </div>\\n            <div class=\\\"col-md-10\\\">\\n              <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\"\\n                     [ngClass]=\\\"{'is-invalid': signupForm.get('passwordGroup').errors ||\\n                                             ((signupForm.get('passwordGroup.password').touched ||\\n                                              signupForm.get('passwordGroup.password').dirty) &&\\n                                              !signupForm.get('passwordGroup.password').valid) }\\\" />\\n              <span class=\\\"invalid-feedback\\\">\\n              <span *ngIf=\\\"signupForm.get('passwordGroup.confirmPassword').errors?.required\\\">\\n                Password is required (6 or more characters with at least one number)\\n              </span>\\n            </span>\\n            </div>\\n        </div>\\n          <br />\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n              Confirm Password:\\n            </div>\\n            <div class=\\\"col-md-10\\\">\\n              <input type=\\\"password\\\" name=\\\"confirmPassword\\\" id=\\\"confirmPassword\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\"\\n                     [ngClass]=\\\"{'is-invalid': signupForm.get('passwordGroup').errors ||\\n                                             ((signupForm.get('passwordGroup.confirmPassword').touched ||\\n                                              signupForm.get('passwordGroup.confirmPassword').dirty) &&\\n                                              !signupForm.get('passwordGroup.confirmPassword').valid) }\\\" />\\n\\n              <span class=\\\"invalid-feedback\\\">\\n              <span *ngIf=\\\"signupForm.get('passwordGroup.confirmPassword').errors?.required\\\">\\n                Please confirm your password.\\n              </span>\\n              <span *ngIf=\\\"signupForm.get('passwordGroup').errors?.match\\\">\\n                The confirmation does not match the password.\\n              </span>\\n            </span>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <br />\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!signupForm.valid\\\">Sign Up!</button>\\n          </div>\\n        </div>\\n        <br />\\n        <div class=\\\"statusRow\\\">\\n          <br />\\n          <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">{{ errorMessage }}</div>\\n        </div>\\n        <div class=\\\"gap text-center\\\">\\n          <p>Already have an account?</p>\\n\\n          <div class=\\\"btn btn-link btn-wide\\\" (click)=\\\"login()\\\">\\n            <span class=\\\"fa fa-lg fa-key\\\"></span>\\n            Log in\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\"","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \".nav-link {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9sb2dpbi9DOlxcVXNlcnNcXHJhdml0XFxEb3dubG9hZHNcXEh5Z2llaWFuZXdcXFVJL3NyY1xcYXBwXFx1c2VyXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC91c2VyL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdi1saW5rIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuIiwiLm5hdi1saW5rIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// local imports\nimport { AuthService } from '../../core/services/auth.service';\nimport { IUserLogin } from '../../shared/interfaces';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  errorMessage: string;\n  authName: string;\n  activeTab: string;\n  authenticationProviders: Array<string>;\n\n  constructor(private formBuilder: FormBuilder,\n              private router: Router,\n              private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.logout();\n    this.buildForm();\n    this.getAuthProviders();\n  }\n  getAuthProviders(): void {\n    this.authService.getAuthenticationProviders().subscribe( data => {\n      this.setActiveTab(data[0]);\n      this.authenticationProviders = data;\n    });\n  }\n  isStandLogin(): boolean {\n    return this.activeTab === 'STANDARD';\n  }\n  isLdapLogin(): boolean {\n    return this.activeTab === 'LDAP';\n  }\n  setActiveTab(tab: string) {\n    if ( tab ) {\n      this.activeTab = tab;\n      this.authName = tab;\n    }\n  }\n  buildForm() {\n    this.loginForm = this.formBuilder.group({\n      username:      ['', [ Validators.required ]],\n      password:   ['', [ Validators.required ]]\n    });\n  }\n\n  submit({ value }: { value: IUserLogin }) {\n    let login;\n    if (this.isStandLogin()) {\n      login = this.authService.login(value);\n    } else {\n      login = this.authService.loginLdap(value);\n    }\n    login.subscribe((status: boolean) => {\n          if (status) {\n            if (this.authService.redirectUrl) {\n              const redirectUrl = this.authService.redirectUrl;\n              this.authService.redirectUrl = '';\n              this.router.navigate([redirectUrl]);\n            } else {\n              this.router.navigate(['/']);\n            }\n          }\n        },\n        (err: any) => {\n          this.errorMessage = err.error.message;\n        });\n  }\n  signUp() {\n    this.router.navigate(['/user/signup']);\n  }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\n\n// local imports\nimport {AuthService} from '../../core/services/auth.service';\nimport {IUserLogin} from '../../shared/interfaces';\n\nfunction passwordMatcher(c: AbstractControl): { [key: string]: boolean } | null {\n  const passwordControl = c.get('password');\n  const confirmControl = c.get('confirmPassword');\n  if (passwordControl.pristine || confirmControl.pristine) {\n    return null;\n  }\n\n  if (passwordControl.value === confirmControl.value) {\n    return null;\n  }\n  return { match: true };\n}\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n  errorMessage: string;\n\n  constructor(private formBuilder: FormBuilder,\n              private router: Router,\n              private authService: AuthService) { }\n\n  ngOnInit() {\n    this.buildForm();\n    this.authService.logout();\n  }\n  buildForm() {\n    this.signupForm = this.formBuilder.group({\n      username:      ['', [ Validators.required ]],\n      passwordGroup: this.formBuilder.group({\n        password: ['', [Validators.required ]],\n        confirmPassword: ['', Validators.required],\n      }, { validator: passwordMatcher }),\n    });\n  }\n  submit({ value }) {\n    const data: IUserLogin = {\n      username: value.username,\n      password: value.passwordGroup.password\n    };\n    this.authService.register(data).subscribe((status: boolean) => {\n        if (status) {\n          if (this.authService.redirectUrl) {\n            const redirectUrl = this.authService.redirectUrl;\n            this.authService.redirectUrl = '';\n            this.router.navigate([redirectUrl]);\n          } else {\n            this.router.navigate(['/']);\n          }\n        }\n      },\n      (err: any) => {\n        this.errorMessage = 'User already exists';\n      });\n  }\n  login() {\n    this.router.navigate(['/user/login']);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserComponent } from './user.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'signup', component: SignupComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule {\n  static components = [UserComponent, LoginComponent, SignupComponent];\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { UserRoutingModule } from './user-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [UserRoutingModule.components],\n  imports: [\n    UserRoutingModule,\n    SharedModule,\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":""}